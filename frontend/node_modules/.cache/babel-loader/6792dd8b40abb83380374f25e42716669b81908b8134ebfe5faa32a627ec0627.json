{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/spoken/frontend/src/components/TranscriptionHistory/TranscriptionHistory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ImageDisplay from '../ImageDisplay/ImageDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TranscriptionHistory({\n  allTranscriptions,\n  imageUrls\n}) {\n  _s();\n  const [showHistory, setShowHistory] = useState(false);\n  const [cleanedTranscriptions, setCleanedTranscriptions] = useState(null);\n  function exportHistory(history) {\n    const dataStr = JSON.stringify(history, null, 2);\n    const blob = new Blob([dataStr], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'history.json';\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n  function handleCleanLogs() {\n    setCleanedTranscriptions([...allTranscriptions]);\n  }\n  const logsToShow = cleanedTranscriptions || allTranscriptions;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-cell history-cell\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowHistory(prev => !prev),\n      children: showHistory ? 'Hide Logs' : 'Show Logs'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), showHistory && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-display\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-log\",\n        children: logsToShow.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#888',\n            fontStyle: 'italic'\n          },\n          children: \"History currently unavailable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this) : logsToShow.map((text, index) => {\n          const images = imageUrls[index];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"history-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), images && /*#__PURE__*/_jsxDEV(ImageDisplay, {\n              images: images\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 32\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCleanLogs,\n      disabled: !!cleanedTranscriptions,\n      children: cleanedTranscriptions ? 'Logs Cleaned' : 'Clean Logs'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportHistory(logsToShow),\n      children: \"Export History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(TranscriptionHistory, \"k+rkUNoDsg8KJZH99JIE0cu7RMc=\");\n_c = TranscriptionHistory;\nexport default TranscriptionHistory;\nvar _c;\n$RefreshReg$(_c, \"TranscriptionHistory\");","map":{"version":3,"names":["React","useState","ImageDisplay","jsxDEV","_jsxDEV","TranscriptionHistory","allTranscriptions","imageUrls","_s","showHistory","setShowHistory","cleanedTranscriptions","setCleanedTranscriptions","exportHistory","history","dataStr","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleCleanLogs","logsToShow","className","children","onClick","prev","fileName","_jsxFileName","lineNumber","columnNumber","length","style","color","fontStyle","map","text","index","images","disabled","_c","$RefreshReg$"],"sources":["/Users/tyler/Documents/spoken/frontend/src/components/TranscriptionHistory/TranscriptionHistory.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ImageDisplay from '../ImageDisplay/ImageDisplay';\n\nfunction TranscriptionHistory({ allTranscriptions, imageUrls }) {\n  const [showHistory, setShowHistory] = useState(false);\n  const [cleanedTranscriptions, setCleanedTranscriptions] = useState(null);\n\n  function exportHistory(history) {\n    const dataStr = JSON.stringify(history, null, 2);\n    const blob = new Blob([dataStr], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'history.json';\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  function handleCleanLogs() {\n    setCleanedTranscriptions([...allTranscriptions]);\n  }\n\n  const logsToShow = cleanedTranscriptions || allTranscriptions;\n\n  return (\n    <div className=\"table-cell history-cell\">\n      <button onClick={() => setShowHistory((prev) => !prev)}>\n        {showHistory ? 'Hide Logs' : 'Show Logs'}\n      </button>\n      {showHistory && (\n        <div className=\"history-display\">\n          <div className=\"history-log\">\n            {logsToShow.length === 0 ? (\n              <p style={{ color: '#888', fontStyle: 'italic' }}>\n                History currently unavailable\n              </p>\n            ) : (\n              logsToShow.map((text, index) => {\n                const images = imageUrls[index];\n                return (\n                  <div key={index} className=\"history-item\">\n                    <p>{text}</p>\n                    {images && <ImageDisplay images={images} />}\n                  </div>\n                );\n              })\n            )}\n          </div>\n        </div>\n      )}\n      <button onClick={handleCleanLogs} disabled={!!cleanedTranscriptions}>\n        {cleanedTranscriptions ? 'Logs Cleaned' : 'Clean Logs'}\n      </button>\n      <button onClick={() => exportHistory(logsToShow)}>\n        Export History\n      </button>\n    </div>\n  );\n}\n\nexport default TranscriptionHistory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}