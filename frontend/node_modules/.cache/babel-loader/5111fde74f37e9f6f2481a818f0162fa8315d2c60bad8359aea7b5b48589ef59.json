{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/SpeakNow/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './styles.css';\nimport TranscriptionDisplay from './TranscriptionDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [transcription, setTranscription] = useState('');\n  const [allTranscriptions, setAllTranscriptions] = useState([]);\n  const ws = useRef(null); // useRef to hold WebSocket instance\n  const retryInterval = useRef(1000); // start retry interval\n\n  useEffect(() => {\n    let retryTimeout;\n    const connectWebSocket = () => {\n      if (ws.current && (ws.current.readyState === WebSocket.OPEN || ws.current.readyState === WebSocket.CONNECTING)) {\n        console.log('WebSocket connection already active.');\n        return; // Prevent multiple connections\n      }\n      ws.current = new WebSocket('ws://localhost:8000/ws');\n      ws.current.onopen = () => {\n        console.log('WebSocket connected');\n        retryInterval.current = 1000; // Reset retry interval\n      };\n      ws.current.onmessage = event => {\n        const newTranscription = event.data;\n        console.log('Received:', newTranscription);\n        setTranscription(newTranscription);\n        setAllTranscriptions(prev => [newTranscription, ...prev]);\n      };\n      ws.current.onclose = () => {\n        console.log('WebSocket disconnected, retrying...');\n        retryTimeout = setTimeout(connectWebSocket, retryInterval.current);\n        retryInterval.current = Math.min(retryInterval.current * 2, 30000);\n      };\n      ws.current.onerror = error => {\n        console.error('WebSocket error:', error);\n        if (ws.current) ws.current.close();\n      };\n    };\n    connectWebSocket();\n    return () => {\n      if (retryTimeout) clearTimeout(retryTimeout);\n      if (ws.current) {\n        ws.current.onopen = null;\n        ws.current.onmessage = null;\n        ws.current.onclose = null;\n        ws.current.onerror = null;\n        ws.current.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(TranscriptionDisplay, {\n        transcription: transcription,\n        allTranscriptions: allTranscriptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kl3of7xpdyHm7kHQw+/0GAq5Vk8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TranscriptionDisplay","jsxDEV","_jsxDEV","App","_s","transcription","setTranscription","allTranscriptions","setAllTranscriptions","ws","retryInterval","retryTimeout","connectWebSocket","current","readyState","WebSocket","OPEN","CONNECTING","console","log","onopen","onmessage","event","newTranscription","data","prev","onclose","setTimeout","Math","min","onerror","error","close","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tyler/Documents/SpeakNow/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './styles.css';\nimport TranscriptionDisplay from './TranscriptionDisplay';\n\nfunction App() {\n  const [transcription, setTranscription] = useState('');\n  const [allTranscriptions, setAllTranscriptions] = useState([]);\n  const ws = useRef(null); // useRef to hold WebSocket instance\n  const retryInterval = useRef(1000); // start retry interval\n\n  useEffect(() => {\n    let retryTimeout;\n\n    const connectWebSocket = () => {\n      if (ws.current && (ws.current.readyState === WebSocket.OPEN || ws.current.readyState === WebSocket.CONNECTING)) {\n        console.log('WebSocket connection already active.');\n        return; // Prevent multiple connections\n      }\n\n      ws.current = new WebSocket('ws://localhost:8000/ws');\n\n      ws.current.onopen = () => {\n        console.log('WebSocket connected');\n        retryInterval.current = 1000; // Reset retry interval\n      };\n\n      ws.current.onmessage = (event) => {\n        const newTranscription = event.data;\n        console.log('Received:', newTranscription);\n        setTranscription(newTranscription);\n        setAllTranscriptions(prev => [newTranscription, ...prev]);\n      };\n\n      ws.current.onclose = () => {\n        console.log('WebSocket disconnected, retrying...');\n        retryTimeout = setTimeout(connectWebSocket, retryInterval.current);\n        retryInterval.current = Math.min(retryInterval.current * 2, 30000);\n      };\n\n      ws.current.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        if (ws.current) ws.current.close();\n      };\n    };\n\n    connectWebSocket();\n\n    return () => {\n      if (retryTimeout) clearTimeout(retryTimeout);\n      if (ws.current) {\n        ws.current.onopen = null;\n        ws.current.onmessage = null;\n        ws.current.onclose = null;\n        ws.current.onerror = null;\n        ws.current.close();\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <TranscriptionDisplay\n          transcription={transcription}\n          allTranscriptions={allTranscriptions}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}