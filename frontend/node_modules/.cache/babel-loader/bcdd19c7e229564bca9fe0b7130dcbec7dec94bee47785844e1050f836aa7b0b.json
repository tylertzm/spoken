{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/SpeakNow/frontend/src/ImageDisplay.jsx\";\nimport React from 'react';\nimport './ImageDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageDisplay({\n  images\n}) {\n  if (!images || images.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-grid\",\n    children: images.map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-item\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: `Generated content ${index + 1}`,\n        loading: \"lazy\",\n        onError: e => {\n          e.target.style.display = 'none';\n          console.log('Failed to load image:', url);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = ImageDisplay;\nexport default ImageDisplay;\nvar _c;\n$RefreshReg$(_c, \"ImageDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ImageDisplay","images","length","className","children","map","url","index","src","alt","loading","onError","e","target","style","display","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tyler/Documents/SpeakNow/frontend/src/ImageDisplay.jsx"],"sourcesContent":["import React from 'react';\nimport './ImageDisplay.css';\n\nfunction ImageDisplay({ images }) {\n    if (!images || images.length === 0) return null;\n\n    return (\n        <div className=\"image-grid\">\n            {images.map((url, index) => (\n                <div key={index} className=\"image-item\">\n                    <img \n                        src={url} \n                        alt={`Generated content ${index + 1}`}\n                        loading=\"lazy\"\n                        onError={(e) => {\n                            e.target.style.display = 'none';\n                            console.log('Failed to load image:', url);\n                        }}\n                    />\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default ImageDisplay;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,YAAYA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAC9B,IAAI,CAACA,MAAM,IAAIA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;EAE/C,oBACIH,OAAA;IAAKI,SAAS,EAAC,YAAY;IAAAC,QAAA,EACtBH,MAAM,CAACI,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBR,OAAA;MAAiBI,SAAS,EAAC,YAAY;MAAAC,QAAA,eACnCL,OAAA;QACIS,GAAG,EAAEF,GAAI;QACTG,GAAG,EAAE,qBAAqBF,KAAK,GAAG,CAAC,EAAG;QACtCG,OAAO,EAAC,MAAM;QACdC,OAAO,EAAGC,CAAC,IAAK;UACZA,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;UAC/BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEX,GAAG,CAAC;QAC7C;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC,GATId,KAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUV,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACC,EAAA,GApBQtB,YAAY;AAsBrB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}