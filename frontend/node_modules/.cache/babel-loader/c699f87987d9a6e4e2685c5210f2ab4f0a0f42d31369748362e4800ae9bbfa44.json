{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/SpeakNow/frontend/src/TranscriptionDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TranscriptionDisplay from './TranscriptionDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [transcription, setTranscription] = React.useState('');\n  const [allTranscriptions, setAllTranscriptions] = React.useState([]);\n\n  // Imagine there's logic here that updates `transcription` in real-time\n  // and `allTranscriptions` is updated with the history of transcriptions.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Real-time Transcription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Speak into your microphone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TranscriptionDisplay, {\n          transcription: transcription,\n          allTranscriptions: allTranscriptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fIb2XmdfGAfjp+GcktgMzRgl2pk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","TranscriptionDisplay","jsxDEV","_jsxDEV","App","_s","transcription","setTranscription","useState","allTranscriptions","setAllTranscriptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tyler/Documents/SpeakNow/frontend/src/TranscriptionDisplay.jsx"],"sourcesContent":["import React from 'react';\nimport TranscriptionDisplay from './TranscriptionDisplay';\n\nfunction App() {\n  const [transcription, setTranscription] = React.useState('');\n  const [allTranscriptions, setAllTranscriptions] = React.useState([]);\n\n  // Imagine there's logic here that updates `transcription` in real-time\n  // and `allTranscriptions` is updated with the history of transcriptions.\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"glass-container\">\n          <h1>Real-time Transcription</h1>\n          <p>Speak into your microphone.</p>\n          <TranscriptionDisplay \n            transcription={transcription} \n            allTranscriptions={allTranscriptions} \n          />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,oBAAoB,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;;EAEpE;EACA;;EAEA,oBACEL,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBT,OAAA;MAAQQ,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BT,OAAA;QAAKQ,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BT,OAAA;UAAAS,QAAA,EAAI;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCb,OAAA;UAAAS,QAAA,EAAG;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAClCb,OAAA,CAACF,oBAAoB;UACnBK,aAAa,EAAEA,aAAc;UAC7BG,iBAAiB,EAAEA;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACX,EAAA,CArBQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}