{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/SpeakNow/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './styles.css';\nimport TranscriptionDisplay from './TranscriptionDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [transcription, setTranscription] = useState('');\n  const [allTranscriptions, setAllTranscriptions] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('Connecting...');\n  const ws = useRef(null); // holds WebSocket instance\n  const connected = useRef(false); // tracks connection state\n  const retryInterval = useRef(1000); // initial retry interval (ms)\n\n  useEffect(() => {\n    let retryTimeout;\n    const connectWebSocket = () => {\n      if (connected.current) {\n        console.log('WebSocket connection already active.');\n        return;\n      }\n      console.log('Attempting to connect to WebSocket...');\n      try {\n        ws.current = new WebSocket('ws://localhost:8000/ws');\n        ws.current.onopen = () => {\n          console.log('✅ WebSocket connected successfully');\n          connected.current = true;\n          setConnectionStatus('Connected ✅');\n          retryInterval.current = 1000; // reset retry interval on successful connect\n        };\n        ws.current.onmessage = event => {\n          const newTranscription = event.data;\n          console.log('📥 Received transcription:', newTranscription);\n          setTranscription(newTranscription);\n          setAllTranscriptions(prev => [newTranscription, ...prev]);\n        };\n        ws.current.onclose = event => {\n          console.log('❌ WebSocket disconnected. Code:', event.code, 'Reason:', event.reason);\n          connected.current = false;\n          retryTimeout = setTimeout(() => {\n            console.log('🔄 Retrying WebSocket connection...');\n            connectWebSocket();\n          }, retryInterval.current);\n          retryInterval.current = Math.min(retryInterval.current * 2, 30000); // cap at 30s\n        };\n        ws.current.onerror = error => {\n          console.error('❌ WebSocket error:', error);\n          connected.current = false;\n          if (ws.current) {\n            ws.current.close();\n          }\n        };\n      } catch (error) {\n        console.error('❌ Failed to create WebSocket connection:', error);\n        connected.current = false;\n        retryTimeout = setTimeout(connectWebSocket, retryInterval.current);\n      }\n    };\n    connectWebSocket();\n    return () => {\n      if (retryTimeout) clearTimeout(retryTimeout);\n      if (ws.current) {\n        ws.current.onopen = null;\n        ws.current.onmessage = null;\n        ws.current.onclose = null;\n        ws.current.onerror = null;\n        ws.current.close();\n      }\n      connected.current = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(TranscriptionDisplay, {\n        transcription: transcription,\n        allTranscriptions: allTranscriptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MqxyBvweTkfNVw1CCNIlSc2bk7Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TranscriptionDisplay","jsxDEV","_jsxDEV","App","_s","transcription","setTranscription","allTranscriptions","setAllTranscriptions","connectionStatus","setConnectionStatus","ws","connected","retryInterval","retryTimeout","connectWebSocket","current","console","log","WebSocket","onopen","onmessage","event","newTranscription","data","prev","onclose","code","reason","setTimeout","Math","min","onerror","error","close","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tyler/Documents/SpeakNow/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './styles.css';\nimport TranscriptionDisplay from './TranscriptionDisplay';\n\nfunction App() {\n  const [transcription, setTranscription] = useState('');\n  const [allTranscriptions, setAllTranscriptions] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('Connecting...');\n\n  const ws = useRef(null); // holds WebSocket instance\n  const connected = useRef(false); // tracks connection state\n  const retryInterval = useRef(1000); // initial retry interval (ms)\n\n  useEffect(() => {\n    let retryTimeout;\n\n    const connectWebSocket = () => {\n      if (connected.current) {\n        console.log('WebSocket connection already active.');\n        return;\n      }\n\n      console.log('Attempting to connect to WebSocket...');\n      \n      try {\n        ws.current = new WebSocket('ws://localhost:8000/ws');\n        \n        ws.current.onopen = () => {\n          console.log('✅ WebSocket connected successfully');\n          connected.current = true;\n          setConnectionStatus('Connected ✅');\n          retryInterval.current = 1000; // reset retry interval on successful connect\n        };\n\n        ws.current.onmessage = (event) => {\n          const newTranscription = event.data;\n          console.log('📥 Received transcription:', newTranscription);\n          setTranscription(newTranscription);\n          setAllTranscriptions(prev => [newTranscription, ...prev]);\n        };\n\n        ws.current.onclose = (event) => {\n          console.log('❌ WebSocket disconnected. Code:', event.code, 'Reason:', event.reason);\n          connected.current = false;\n          retryTimeout = setTimeout(() => {\n            console.log('🔄 Retrying WebSocket connection...');\n            connectWebSocket();\n          }, retryInterval.current);\n          retryInterval.current = Math.min(retryInterval.current * 2, 30000); // cap at 30s\n        };\n\n        ws.current.onerror = (error) => {\n          console.error('❌ WebSocket error:', error);\n          connected.current = false;\n          if (ws.current) {\n            ws.current.close();\n          }\n        };\n      } catch (error) {\n        console.error('❌ Failed to create WebSocket connection:', error);\n        connected.current = false;\n        retryTimeout = setTimeout(connectWebSocket, retryInterval.current);\n      }\n    };\n\n    connectWebSocket();\n\n    return () => {\n      if (retryTimeout) clearTimeout(retryTimeout);\n      if (ws.current) {\n        ws.current.onopen = null;\n        ws.current.onmessage = null;\n        ws.current.onclose = null;\n        ws.current.onerror = null;\n        ws.current.close();\n      }\n      connected.current = false;\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <TranscriptionDisplay\n          transcription={transcription}\n          allTranscriptions={allTranscriptions}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}