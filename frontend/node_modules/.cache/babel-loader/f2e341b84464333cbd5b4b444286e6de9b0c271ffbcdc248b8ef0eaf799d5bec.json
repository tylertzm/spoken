{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/SpeakNow/frontend/src/ConnectionStatusDisplay.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConnectionStatusDisplay({\n  connectionStatus\n}) {\n  const getStatusClass = status => {\n    if (status.includes('Connected') || status.includes('Recording')) {\n      return 'status-connected';\n    } else if (status.includes('Starting') || status.includes('Connecting')) {\n      return 'status-connecting';\n    } else if (status.includes('Error') || status.includes('Disconnected')) {\n      return 'status-error';\n    }\n    return 'status-default';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connection-status\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-indicator ${getStatusClass(connectionStatus)}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status-text\",\n        children: connectionStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = ConnectionStatusDisplay;\nexport default ConnectionStatusDisplay;\nvar _c;\n$RefreshReg$(_c, \"ConnectionStatusDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ConnectionStatusDisplay","connectionStatus","getStatusClass","status","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tyler/Documents/SpeakNow/frontend/src/ConnectionStatusDisplay.jsx"],"sourcesContent":["import React from 'react';\n\nfunction ConnectionStatusDisplay({ connectionStatus }) {\n  const getStatusClass = (status) => {\n    if (status.includes('Connected') || status.includes('Recording')) {\n      return 'status-connected';\n    } else if (status.includes('Starting') || status.includes('Connecting')) {\n      return 'status-connecting';\n    } else if (status.includes('Error') || status.includes('Disconnected')) {\n      return 'status-error';\n    }\n    return 'status-default';\n  };\n\n  return (\n    <div className=\"connection-status\">\n      <div className={`status-indicator ${getStatusClass(connectionStatus)}`}>\n        <div className=\"status-dot\"></div>\n        <span className=\"status-text\">{connectionStatus}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default ConnectionStatusDisplay; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,uBAAuBA,CAAC;EAAEC;AAAiB,CAAC,EAAE;EACrD,MAAMC,cAAc,GAAIC,MAAM,IAAK;IACjC,IAAIA,MAAM,CAACC,QAAQ,CAAC,WAAW,CAAC,IAAID,MAAM,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;MAChE,OAAO,kBAAkB;IAC3B,CAAC,MAAM,IAAID,MAAM,CAACC,QAAQ,CAAC,UAAU,CAAC,IAAID,MAAM,CAACC,QAAQ,CAAC,YAAY,CAAC,EAAE;MACvE,OAAO,mBAAmB;IAC5B,CAAC,MAAM,IAAID,MAAM,CAACC,QAAQ,CAAC,OAAO,CAAC,IAAID,MAAM,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;MACtE,OAAO,cAAc;IACvB;IACA,OAAO,gBAAgB;EACzB,CAAC;EAED,oBACEL,OAAA;IAAKM,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChCP,OAAA;MAAKM,SAAS,EAAE,oBAAoBH,cAAc,CAACD,gBAAgB,CAAC,EAAG;MAAAK,QAAA,gBACrEP,OAAA;QAAKM,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClCX,OAAA;QAAMM,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEL;MAAgB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACC,EAAA,GApBQX,uBAAuB;AAsBhC,eAAeA,uBAAuB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}