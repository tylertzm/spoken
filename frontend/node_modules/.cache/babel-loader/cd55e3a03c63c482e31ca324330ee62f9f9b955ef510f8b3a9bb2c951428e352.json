{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/spoken/frontend/src/components/TranscriptionHistory/TranscriptionHistory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ImageDisplay from '../ImageDisplay/ImageDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TranscriptionHistory({\n  allTranscriptions,\n  imageUrls\n}) {\n  _s();\n  const [showHistory, setShowHistory] = useState(false);\n  function exportHistory(history) {\n    const dataStr = JSON.stringify(history, null, 2);\n    const blob = new Blob([dataStr], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'history.json';\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-cell history-cell\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowHistory(prev => !prev),\n      children: showHistory ? 'Hide Logs' : 'Show Logs'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), showHistory && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-display\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-log\",\n        children: allTranscriptions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#888',\n            fontStyle: 'italic'\n          },\n          children: \"History currently unavailable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this) : allTranscriptions.map((text, index) => {\n          const images = imageUrls[index];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"history-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 21\n            }, this), images && /*#__PURE__*/_jsxDEV(ImageDisplay, {\n              images: images\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 32\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportHistory(allTranscriptions),\n      children: \"Export History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(TranscriptionHistory, \"YoM2W+dOhVNhhsWRK9M8dokNVoI=\");\n_c = TranscriptionHistory;\nexport default TranscriptionHistory;\nvar _c;\n$RefreshReg$(_c, \"TranscriptionHistory\");","map":{"version":3,"names":["React","useState","ImageDisplay","jsxDEV","_jsxDEV","TranscriptionHistory","allTranscriptions","imageUrls","_s","showHistory","setShowHistory","exportHistory","history","dataStr","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","className","children","onClick","prev","fileName","_jsxFileName","lineNumber","columnNumber","length","style","color","fontStyle","map","text","index","images","_c","$RefreshReg$"],"sources":["/Users/tyler/Documents/spoken/frontend/src/components/TranscriptionHistory/TranscriptionHistory.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ImageDisplay from '../ImageDisplay/ImageDisplay';\n\nfunction TranscriptionHistory({ allTranscriptions, imageUrls }) {\n  const [showHistory, setShowHistory] = useState(false);\n\n  function exportHistory(history) {\n    const dataStr = JSON.stringify(history, null, 2);\n    const blob = new Blob([dataStr], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'history.json';\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  return (\n    <div className=\"table-cell history-cell\">\n      <button onClick={() => setShowHistory((prev) => !prev)}>\n        {showHistory ? 'Hide Logs' : 'Show Logs'}\n      </button>\n      {showHistory && (\n        <div className=\"history-display\">\n          <div className=\"history-log\">\n            {allTranscriptions.length === 0 ? (\n              <p style={{ color: '#888', fontStyle: 'italic' }}>\n                History currently unavailable\n              </p>\n            ) : (\n              allTranscriptions.map((text, index) => {\n                const images = imageUrls[index];\n                return (\n                  <div key={index} className=\"history-item\">\n                    <p>{text}</p>\n                    {images && <ImageDisplay images={images} />}\n                  </div>\n                );\n              })\n            )}\n          </div>\n        </div>\n      )}\n      <button onClick={() => exportHistory(allTranscriptions)}>\n        Export History\n      </button>\n    </div>\n  );\n}\n\nexport default TranscriptionHistory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}