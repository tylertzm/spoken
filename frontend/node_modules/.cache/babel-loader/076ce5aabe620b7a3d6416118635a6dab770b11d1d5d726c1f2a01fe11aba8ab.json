{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Documents/spoken/frontend/src/components/TranscriptionHistory/TranscriptionHistory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ImageDisplay from '../ImageDisplay/ImageDisplay';\n\n// allTranscriptions should now be an array of { text, timestamp, images }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TranscriptionHistory({\n  allTranscriptions,\n  setAllTranscriptions\n}) {\n  _s();\n  const [showHistory, setShowHistory] = useState(false);\n  const [hasCleaned, setHasCleaned] = useState(false);\n  function exportHistory(history) {\n    const dataStr = JSON.stringify(history, null, 2);\n    const blob = new Blob([dataStr], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'history.json';\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n  function handleCleanLogs() {\n    // Example cleaning: trim whitespace and remove empty logs\n    const cleaned = allTranscriptions.map(item => ({\n      ...item,\n      text: item.text.trim()\n    })).filter(item => item.text.length > 0);\n    setAllTranscriptions(cleaned);\n    setHasCleaned(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-cell history-cell\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowHistory(prev => !prev),\n      children: showHistory ? 'Hide Logs' : 'Show Logs'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), showHistory && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-display\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-log\",\n        children: !hasCleaned ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#888',\n            fontStyle: 'italic'\n          },\n          children: \"Run the cleaner to view transcription history.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this) : allTranscriptions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#888',\n            fontStyle: 'italic'\n          },\n          children: \"History currently unavailable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this) : allTranscriptions.map((item, index) => {\n          if (!item || typeof item !== 'object') return null;\n          let timeString = 'No Timestamp';\n          if (item.timestamp) {\n            const date = new Date(item.timestamp);\n            if (!isNaN(date.getTime())) {\n              timeString = date.toLocaleTimeString();\n            }\n          }\n          const text = typeof item.text === 'string' && item.text.trim().length > 0 ? item.text : 'No Text';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"history-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#aaa',\n                  fontSize: '0.85em',\n                  marginRight: 8\n                },\n                children: timeString\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 25\n              }, this), text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 23\n            }, this), item.images && /*#__PURE__*/_jsxDEV(ImageDisplay, {\n              images: item.images\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 39\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCleanLogs,\n      children: \"Clean Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportHistory(allTranscriptions),\n      children: \"Export History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(TranscriptionHistory, \"9YcXHnAinHSzBXfMNiNpi3ydxKQ=\");\n_c = TranscriptionHistory;\nexport default TranscriptionHistory;\nvar _c;\n$RefreshReg$(_c, \"TranscriptionHistory\");","map":{"version":3,"names":["React","useState","ImageDisplay","jsxDEV","_jsxDEV","TranscriptionHistory","allTranscriptions","setAllTranscriptions","_s","showHistory","setShowHistory","hasCleaned","setHasCleaned","exportHistory","history","dataStr","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleCleanLogs","cleaned","map","item","text","trim","filter","length","className","children","onClick","prev","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontStyle","index","timeString","timestamp","date","Date","isNaN","getTime","toLocaleTimeString","fontSize","marginRight","images","_c","$RefreshReg$"],"sources":["/Users/tyler/Documents/spoken/frontend/src/components/TranscriptionHistory/TranscriptionHistory.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ImageDisplay from '../ImageDisplay/ImageDisplay';\n\n// allTranscriptions should now be an array of { text, timestamp, images }\nfunction TranscriptionHistory({ allTranscriptions, setAllTranscriptions }) {\n  const [showHistory, setShowHistory] = useState(false);\n  const [hasCleaned, setHasCleaned] = useState(false);\n\n  function exportHistory(history) {\n    const dataStr = JSON.stringify(history, null, 2);\n    const blob = new Blob([dataStr], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'history.json';\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  function handleCleanLogs() {\n    // Example cleaning: trim whitespace and remove empty logs\n    const cleaned = allTranscriptions\n      .map(item => ({ ...item, text: item.text.trim() }))\n      .filter(item => item.text.length > 0);\n    setAllTranscriptions(cleaned);\n    setHasCleaned(true);\n  }\n\n  return (\n    <div className=\"table-cell history-cell\">\n      <button onClick={() => setShowHistory((prev) => !prev)}>\n        {showHistory ? 'Hide Logs' : 'Show Logs'}\n      </button>\n      {showHistory && (\n        <div className=\"history-display\">\n          <div className=\"history-log\">\n            {!hasCleaned ? (\n              <p style={{ color: '#888', fontStyle: 'italic' }}>\n                Run the cleaner to view transcription history.\n              </p>\n            ) : (\n              allTranscriptions.length === 0 ? (\n                <p style={{ color: '#888', fontStyle: 'italic' }}>\n                  History currently unavailable\n                </p>\n              ) : (\n                allTranscriptions.map((item, index) => {\n                  if (!item || typeof item !== 'object') return null;\n                  let timeString = 'No Timestamp';\n                  if (item.timestamp) {\n                    const date = new Date(item.timestamp);\n                    if (!isNaN(date.getTime())) {\n                      timeString = date.toLocaleTimeString();\n                    }\n                  }\n                  const text = typeof item.text === 'string' && item.text.trim().length > 0 ? item.text : 'No Text';\n                  return (\n                    <div key={index} className=\"history-item\">\n                      <p>\n                        <span style={{ color: '#aaa', fontSize: '0.85em', marginRight: 8 }}>\n                          {timeString}\n                        </span>\n                        {text}\n                      </p>\n                      {item.images && <ImageDisplay images={item.images} />}\n                    </div>\n                  );\n                })\n              )\n            )}\n          </div>\n        </div>\n      )}\n      <button onClick={handleCleanLogs}>\n        Clean Logs\n      </button>\n      <button onClick={() => exportHistory(allTranscriptions)}>\n        Export History\n      </button>\n    </div>\n  );\n}\n\nexport default TranscriptionHistory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}